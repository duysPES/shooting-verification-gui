{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3","program":"/home/duys/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","bytes","/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=8d1791172c3b91d4","-C","extra-filename=-8d1791172c3b91d4","--out-dir","/home/duys/shooting-verification-gui/rusty-lisc/target/rls/debug/deps","-L","dependency=/home/duys/shooting-verification-gui/rusty-lisc/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/duys/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/duys/shooting-verification-gui/rusty-lisc/target/rls/debug/deps/libbytes-8d1791172c3b91d4.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[6342655478109453627,17816333152532512132]},"crate_root":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src","external_crates":[{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[14029911340352309513,3694302842271320647]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7486411228932131176,10611882423765912104]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8951493940525711481,6598059053846807751]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6080538021290120973,12135415365643254465]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[2404946192574906823,11198495443784404083]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8156052144428984436,15205012491124168822]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11527475684179663565,15577722846879460413]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4615572763888095747,7180296191060376175]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16051702409717455556,18428390842256153874]}},{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14083788917415871355,15092499333930635081]}}],"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":0,"byte_end":3451,"line_start":1,"line_end":118,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":953},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60731,"byte_end":60736,"line_start":13,"line_end":13,"column_start":22,"column_end":27},"alias_span":null,"name":"Limit","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60758,"byte_end":60762,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60785,"byte_end":60790,"line_start":15,"line_end":15,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60840,"byte_end":60846,"line_start":18,"line_end":18,"column_start":24,"column_end":30},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60856,"byte_end":60862,"line_start":18,"line_end":18,"column_start":40,"column_end":46},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":25},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4279,"byte_end":4282,"line_start":25,"line_end":25,"column_start":25,"column_end":28},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4307,"byte_end":4313,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4335,"byte_end":4341,"line_start":27,"line_end":27,"column_start":21,"column_end":27},"alias_span":null,"name":"BufExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4343,"byte_end":4352,"line_start":27,"line_end":27,"column_start":29,"column_end":38},"alias_span":null,"name":"BufMutExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4402,"byte_end":4412,"line_start":29,"line_end":29,"column_start":24,"column_end":34},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":981},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4434,"byte_end":4442,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":25},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2899,"byte_end":2902,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2908,"byte_end":2914,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":3002,"byte_end":3010,"line_start":92,"line_end":92,"column_start":27,"column_end":35},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":3034,"byte_end":3039,"line_start":93,"line_end":93,"column_start":23,"column_end":28},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":0,"byte_end":3451,"line_start":1,"line_end":118,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":561},{"krate":0,"index":733},{"krate":0,"index":741},{"krate":0,"index":761},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"deny(warnings, missing_docs, missing_debug_implementations,\n       rust_2018_idioms)","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"no_std","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":137,"byte_end":147,"line_start":3,"line_end":3,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":81},{"krate":0,"index":159},{"krate":0,"index":295},{"krate":0,"index":310},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":323}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6882,"byte_end":6885,"line_start":71,"line_end":71,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf_impl::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7632,"byte_end":7641,"line_start":97,"line_end":97,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf_impl::Buf::remaining","value":"fn (&self) -> usize","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8493,"byte_end":8498,"line_start":125,"line_end":125,"column_start":8,"column_end":13},"name":"bytes","qualname":"::buf::buf_impl::Buf::bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9869,"byte_end":9883,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"bytes_vectored","qualname":"::buf::buf_impl::Buf::bytes_vectored","value":"fn <'a> (&'a self, dst: &mut [IoSlice<'a>]) -> usize","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9838,"byte_end":9861,"line_start":154,"line_end":154,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11025,"byte_end":11032,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf_impl::Buf::advance","value":"fn (&mut self, cnt: usize) -> ()","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11435,"byte_end":11448,"line_start":217,"line_end":217,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf_impl::Buf::has_remaining","value":"fn (&self) -> bool","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12073,"byte_end":12086,"line_start":242,"line_end":242,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf_impl::Buf::copy_to_slice","value":"fn (&mut self, dst: &mut [u8]) -> ()","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12958,"byte_end":12964,"line_start":280,"line_end":280,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf_impl::Buf::get_u8","value":"fn (&mut self) -> u8","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13492,"byte_end":13498,"line_start":303,"line_end":303,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf_impl::Buf::get_i8","value":"fn (&mut self) -> i8","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14074,"byte_end":14081,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf_impl::Buf::get_u16","value":"fn (&mut self) -> u16","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14595,"byte_end":14605,"line_start":346,"line_end":346,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf_impl::Buf::get_u16_le","value":"fn (&mut self) -> u16","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15110,"byte_end":15117,"line_start":366,"line_end":366,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf_impl::Buf::get_i16","value":"fn (&mut self) -> i16","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15628,"byte_end":15638,"line_start":386,"line_end":386,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf_impl::Buf::get_i16_le","value":"fn (&mut self) -> i16","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16162,"byte_end":16169,"line_start":406,"line_end":406,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf_impl::Buf::get_u32","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16699,"byte_end":16709,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf_impl::Buf::get_u32_le","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17226,"byte_end":17233,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf_impl::Buf::get_i32","value":"fn (&mut self) -> i32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17756,"byte_end":17766,"line_start":466,"line_end":466,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf_impl::Buf::get_i32_le","value":"fn (&mut self) -> i32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18310,"byte_end":18317,"line_start":486,"line_end":486,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf_impl::Buf::get_u64","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18867,"byte_end":18877,"line_start":506,"line_end":506,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf_impl::Buf::get_u64_le","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19418,"byte_end":19425,"line_start":526,"line_end":526,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf_impl::Buf::get_i64","value":"fn (&mut self) -> i64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19972,"byte_end":19982,"line_start":546,"line_end":546,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf_impl::Buf::get_i64_le","value":"fn (&mut self) -> i64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20577,"byte_end":20585,"line_start":566,"line_end":566,"column_start":8,"column_end":16},"name":"get_u128","qualname":"::buf::buf_impl::Buf::get_u128","value":"fn (&mut self) -> u128","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21188,"byte_end":21199,"line_start":586,"line_end":586,"column_start":8,"column_end":19},"name":"get_u128_le","qualname":"::buf::buf_impl::Buf::get_u128_le","value":"fn (&mut self) -> u128","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21793,"byte_end":21801,"line_start":606,"line_end":606,"column_start":8,"column_end":16},"name":"get_i128","qualname":"::buf::buf_impl::Buf::get_i128","value":"fn (&mut self) -> i128","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22401,"byte_end":22412,"line_start":626,"line_end":626,"column_start":8,"column_end":19},"name":"get_i128_le","qualname":"::buf::buf_impl::Buf::get_i128_le","value":"fn (&mut self) -> i128","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22937,"byte_end":22945,"line_start":646,"line_end":646,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf_impl::Buf::get_uint","value":"fn (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23488,"byte_end":23499,"line_start":666,"line_end":666,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf_impl::Buf::get_uint_le","value":"fn (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24032,"byte_end":24039,"line_start":686,"line_end":686,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf_impl::Buf::get_int","value":"fn (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24578,"byte_end":24588,"line_start":706,"line_end":706,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf_impl::Buf::get_int_le","value":"fn (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25159,"byte_end":25166,"line_start":727,"line_end":727,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf_impl::Buf::get_f32","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25724,"byte_end":25734,"line_start":748,"line_end":748,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf_impl::Buf::get_f32_le","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26305,"byte_end":26312,"line_start":769,"line_end":769,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf_impl::Buf::get_f64","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26886,"byte_end":26896,"line_start":790,"line_end":790,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf_impl::Buf::get_f64_le","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27257,"byte_end":27265,"line_start":804,"line_end":804,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::buf::buf_impl::Buf::to_bytes","value":"fn (&mut self) -> crate::Bytes","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Consumes remaining bytes inside self and returns new instance of `Bytes`","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32004,"byte_end":32010,"line_start":28,"line_end":28,"column_start":11,"column_end":17},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32868,"byte_end":32881,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"fn (&self) -> usize","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34331,"byte_end":34342,"line_start":100,"line_end":100,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"fn (&mut self, cnt: usize) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34808,"byte_end":34825,"line_start":120,"line_end":120,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"fn (&self) -> bool","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36378,"byte_end":36387,"line_start":165,"line_end":165,"column_start":8,"column_end":17},"name":"bytes_mut","qualname":"::buf::buf_mut::BufMut::bytes_mut","value":"fn (&mut self) -> &mut [MaybeUninit<u8>]","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37830,"byte_end":37848,"line_start":196,"line_end":196,"column_start":8,"column_end":26},"name":"bytes_vectored_mut","qualname":"::buf::buf_mut::BufMut::bytes_vectored_mut","value":"fn <'a> (&'a mut self, dst: &mut [IoSliceMut<'a>]) -> usize","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple mutable slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37799,"byte_end":37822,"line_start":195,"line_end":195,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38617,"byte_end":38620,"line_start":229,"line_end":229,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"fn <T> (&mut self, mut src: T) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39696,"byte_end":39705,"line_start":270,"line_end":270,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"fn (&mut self, src: &[u8]) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40755,"byte_end":40761,"line_start":313,"line_end":313,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"fn (&mut self, n: u8) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41260,"byte_end":41266,"line_start":336,"line_end":336,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"fn (&mut self, n: i8) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41806,"byte_end":41813,"line_start":359,"line_end":359,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"fn (&mut self, n: u16) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42343,"byte_end":42353,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"fn (&mut self, n: u16) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42874,"byte_end":42881,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"fn (&mut self, n: i16) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43408,"byte_end":43418,"line_start":425,"line_end":425,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"fn (&mut self, n: i16) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43954,"byte_end":43961,"line_start":447,"line_end":447,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"fn (&mut self, n: u32) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44503,"byte_end":44513,"line_start":469,"line_end":469,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"fn (&mut self, n: u32) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45046,"byte_end":45053,"line_start":491,"line_end":491,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"fn (&mut self, n: i32) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45592,"byte_end":45602,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"fn (&mut self, n: i32) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46166,"byte_end":46173,"line_start":535,"line_end":535,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"fn (&mut self, n: u64) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46739,"byte_end":46749,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"fn (&mut self, n: u64) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47310,"byte_end":47317,"line_start":579,"line_end":579,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"fn (&mut self, n: i64) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47880,"byte_end":47890,"line_start":601,"line_end":601,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"fn (&mut self, n: i64) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48505,"byte_end":48513,"line_start":623,"line_end":623,"column_start":8,"column_end":16},"name":"put_u128","qualname":"::buf::buf_mut::BufMut::put_u128","value":"fn (&mut self, n: u128) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49131,"byte_end":49142,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"put_u128_le","qualname":"::buf::buf_mut::BufMut::put_u128_le","value":"fn (&mut self, n: u128) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49755,"byte_end":49763,"line_start":667,"line_end":667,"column_start":8,"column_end":16},"name":"put_i128","qualname":"::buf::buf_mut::BufMut::put_i128","value":"fn (&mut self, n: i128) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50378,"byte_end":50389,"line_start":689,"line_end":689,"column_start":8,"column_end":19},"name":"put_i128_le","qualname":"::buf::buf_mut::BufMut::put_i128_le","value":"fn (&mut self, n: i128) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50931,"byte_end":50939,"line_start":711,"line_end":711,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"fn (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51539,"byte_end":51550,"line_start":733,"line_end":733,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"fn (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52114,"byte_end":52121,"line_start":755,"line_end":755,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"fn (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52713,"byte_end":52723,"line_start":777,"line_end":777,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"fn (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53324,"byte_end":53331,"line_start":800,"line_end":800,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"fn (&mut self, n: f32) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53905,"byte_end":53915,"line_start":823,"line_end":823,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"fn (&mut self, n: f32) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54502,"byte_end":54509,"line_start":846,"line_end":846,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"fn (&mut self, n: f64) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":55099,"byte_end":55109,"line_start":869,"line_end":869,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"fn (&mut self, n: f64) -> ()","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":147},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59667,"byte_end":59677,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"IoSliceMut","qualname":"::buf::buf_mut::IoSliceMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer type used for `readv`.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59611,"byte_end":59631,"line_start":1059,"line_end":1059,"column_start":1,"column_end":21}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59632,"byte_end":59655,"line_start":1060,"line_end":1060,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":159},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::buf::ext","value":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":203},{"krate":0,"index":222},{"krate":0,"index":242},{"krate":0,"index":259},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":293}],"decl_id":null,"docs":" Extra utilities for `Buf` and `BufMut` types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":944},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66267,"byte_end":66272,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::ext::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66402,"byte_end":66405,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Chain<T, U>>::new","value":"fn (a: T, b: U) -> Chain<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Chain` sequencing the provided values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66796,"byte_end":66805,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67229,"byte_end":67238,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67585,"byte_end":67593,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68017,"byte_end":68025,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68466,"byte_end":68476,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":70832,"byte_end":70837,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Limit","qualname":"::buf::ext::limit::Limit","value":"Limit {  }","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"decl_id":null,"docs":" A `BufMut` adapter which limits the amount of bytes that can be written\n to an underlying buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71081,"byte_end":71091,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Limit<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Limit`, returning the underlying value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71275,"byte_end":71282,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Limit<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71477,"byte_end":71484,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Limit<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71780,"byte_end":71785,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limit<T>>::limit","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be written","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":72050,"byte_end":72059,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Limit<T>>::set_limit","value":"fn (&mut self, lim: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be written.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":72906,"byte_end":72912,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Reader","qualname":"::buf::ext::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":963}],"decl_id":null,"docs":" A `Buf` adapter which implements `io::Read` for the inner value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73365,"byte_end":73372,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<B>>::get_ref","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73560,"byte_end":73567,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<B>>::get_mut","value":"fn (&mut self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74042,"byte_end":74052,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Reader`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":74850,"byte_end":74854,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::ext::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75501,"byte_end":75511,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75905,"byte_end":75912,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76410,"byte_end":76417,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76984,"byte_end":76989,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77642,"byte_end":77651,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn (&mut self, lim: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78423,"byte_end":78429,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Writer","qualname":"::buf::ext::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":977}],"decl_id":null,"docs":" A `BufMut` adapter which implements `io::Write` for the inner value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78904,"byte_end":78911,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<B>>::get_ref","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79354,"byte_end":79361,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Writer<B>>::get_mut","value":"fn (&mut self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79843,"byte_end":79853,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":281},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60924,"byte_end":60930,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"BufExt","qualname":"::buf::ext::BufExt","value":"BufExt: Buf","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285}],"decl_id":null,"docs":" Extra methods for implementations of `Buf`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61528,"byte_end":61532,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::ext::BufExt::take","value":"fn (self, limit: usize) -> Take<Self>","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62128,"byte_end":62133,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::ext::BufExt::chain","value":"fn <U> (self, next: U) -> Chain<Self, U>","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63031,"byte_end":63037,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"reader","qualname":"::buf::ext::BufExt::reader","value":"fn (self) -> Reader<Self>","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Read` trait for `self`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63000,"byte_end":63023,"line_start":93,"line_end":93,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":288},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63215,"byte_end":63224,"line_start":102,"line_end":102,"column_start":11,"column_end":20},"name":"BufMutExt","qualname":"::buf::ext::BufMutExt","value":"BufMutExt: BufMut","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" Extra methods for implementations of `BufMut`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63601,"byte_end":63606,"line_start":116,"line_end":116,"column_start":8,"column_end":13},"name":"limit","qualname":"::buf::ext::BufMutExt::limit","value":"fn (self, limit: usize) -> Limit<Self>","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Creates an adaptor which can write at most `limit` bytes to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64468,"byte_end":64474,"line_start":145,"line_end":145,"column_start":8,"column_end":14},"name":"writer","qualname":"::buf::ext::BufMutExt::writer","value":"fn (self) -> Writer<Self>","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Write` trait for `self`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64437,"byte_end":64460,"line_start":144,"line_end":144,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65136,"byte_end":65145,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"chain_mut","qualname":"::buf::ext::BufMutExt::chain_mut","value":"fn <U> (self, next: U) -> Chain<Self, U>","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Creates an adapter which will chain this buffer with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":981},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80757,"byte_end":80765,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::buf::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":983}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81294,"byte_end":81297,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<IntoIter<T>>::new","value":"fn (inner: T) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the bytes contained by the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81761,"byte_end":81771,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoIter<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `IntoIter`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82250,"byte_end":82257,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoIter<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82790,"byte_end":82797,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoIter<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":85175,"byte_end":85183,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes_mut::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88003,"byte_end":88016,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"fn (capacity: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87982,"byte_end":87991,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88615,"byte_end":88618,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"fn () -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88594,"byte_end":88603,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88943,"byte_end":88946,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88922,"byte_end":88931,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89244,"byte_end":89252,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89223,"byte_end":89232,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89585,"byte_end":89593,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89564,"byte_end":89573,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90409,"byte_end":90415,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"fn (mut self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90388,"byte_end":90397,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91898,"byte_end":91907,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"must_use = \"consider BytesMut::truncate if you don't need the other half\"","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91810,"byte_end":91886,"line_start":278,"line_end":278,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93029,"byte_end":93034,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"split","qualname":"<BytesMut>::split","value":"fn (&mut self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[{"value":"must_use =\n  \"consider BytesMut::advance(len()) if you don't need the other half\"","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92935,"byte_end":93017,"line_start":314,"line_end":314,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93902,"byte_end":93910,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"must_use = \"consider BytesMut::advance if you don't need the other half\"","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93815,"byte_end":93890,"line_start":346,"line_end":346,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94756,"byte_end":94764,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95146,"byte_end":95151,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95876,"byte_end":95882,"line_start":421,"line_end":421,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"fn (&mut self, new_len: usize, value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96941,"byte_end":96948,"line_start":461,"line_end":461,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98719,"byte_end":98726,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98698,"byte_end":98707,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104247,"byte_end":104264,"line_start":662,"line_end":662,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"fn (&mut self, extend: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105277,"byte_end":105284,"line_start":700,"line_end":700,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"fn (&mut self, other: BytesMut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Combine splitted BytesMut objects back as contiguous.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":588},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129950,"byte_end":129955,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"decl_id":null,"docs":" A reference counted contiguous slice of memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130614,"byte_end":130617,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Bytes>::new","value":"fn () -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130593,"byte_end":130602,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131083,"byte_end":131094,"line_start":118,"line_end":118,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Bytes>::from_static","value":"fn (bytes: &'static [u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131023,"byte_end":131032,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"cfg(not (all (loom, test)))","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131037,"byte_end":131065,"line_start":117,"line_end":117,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131835,"byte_end":131838,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<Bytes>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131814,"byte_end":131823,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132115,"byte_end":132123,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132094,"byte_end":132103,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132241,"byte_end":132256,"line_start":169,"line_end":169,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Bytes>::copy_from_slice","value":"fn (data: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Creates `Bytes` instance from slice, by copying it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132916,"byte_end":132921,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"fn (&self, range: impl RangeBounds<usize>) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the provided range.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134589,"byte_end":134598,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"fn (&self, subset: &[u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136083,"byte_end":136092,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"must_use = \"consider Bytes::truncate if you don't need the other half\"","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135998,"byte_end":136071,"line_start":303,"line_end":303,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137151,"byte_end":137159,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"must_use = \"consider Bytes::advance if you don't need the other half\"","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137067,"byte_end":137139,"line_start":347,"line_end":347,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138123,"byte_end":138131,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138102,"byte_end":138111,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138504,"byte_end":138509,"line_start":407,"line_end":407,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138483,"byte_end":138492,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":29577,"byte_end":29580,"line_start":922,"line_end":922,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":29882,"byte_end":29888,"line_start":943,"line_end":943,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":30456,"byte_end":30462,"line_start":972,"line_end":972,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":56874,"byte_end":56877,"line_start":959,"line_end":959,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":57460,"byte_end":57463,"line_start":983,"line_end":983,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59753,"byte_end":59763,"line_start":1064,"line_end":1064,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59998,"byte_end":60008,"line_start":1073,"line_end":1073,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":60194,"byte_end":60204,"line_start":1080,"line_end":1080,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66315,"byte_end":66320,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68548,"byte_end":68553,"line_start":139,"line_end":139,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":69448,"byte_end":69453,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":70455,"byte_end":70460,"line_start":223,"line_end":223,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":70996,"byte_end":71001,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":72146,"byte_end":72151,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73005,"byte_end":73011,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74126,"byte_end":74132,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74385,"byte_end":74391,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75004,"byte_end":75008,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77732,"byte_end":77736,"line_start":135,"line_end":135,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78525,"byte_end":78531,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79931,"byte_end":79937,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63148,"byte_end":63149,"line_start":99,"line_end":99,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65301,"byte_end":65302,"line_start":176,"line_end":176,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80796,"byte_end":80804,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82881,"byte_end":82889,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":83289,"byte_end":83297,"line_start":133,"line_end":133,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/vec_deque.rs","byte_start":83371,"byte_end":83379,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87172,"byte_end":87180,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":111788,"byte_end":111796,"line_start":905,"line_end":905,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":112230,"byte_end":112238,"line_start":922,"line_end":922,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":112670,"byte_end":112678,"line_start":944,"line_end":944,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113661,"byte_end":113669,"line_start":982,"line_end":982,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113766,"byte_end":113774,"line_start":989,"line_end":989,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113899,"byte_end":113907,"line_start":998,"line_end":998,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114005,"byte_end":114013,"line_start":1004,"line_end":1004,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114132,"byte_end":114140,"line_start":1011,"line_end":1011,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114261,"byte_end":114269,"line_start":1017,"line_end":1017,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114379,"byte_end":114387,"line_start":1023,"line_end":1023,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114508,"byte_end":114516,"line_start":1029,"line_end":1029,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114666,"byte_end":114674,"line_start":1035,"line_end":1035,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114799,"byte_end":114807,"line_start":1041,"line_end":1041,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114830,"byte_end":114838,"line_start":1044,"line_end":1044,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114939,"byte_end":114947,"line_start":1051,"line_end":1051,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115108,"byte_end":115116,"line_start":1057,"line_end":1057,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115272,"byte_end":115280,"line_start":1064,"line_end":1064,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115371,"byte_end":115379,"line_start":1070,"line_end":1070,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115477,"byte_end":115485,"line_start":1076,"line_end":1076,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115864,"byte_end":115872,"line_start":1093,"line_end":1093,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115974,"byte_end":115982,"line_start":1099,"line_end":1099,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116345,"byte_end":116353,"line_start":1117,"line_end":1117,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116792,"byte_end":116800,"line_start":1134,"line_end":1134,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116964,"byte_end":116972,"line_start":1140,"line_end":1140,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":117141,"byte_end":117149,"line_start":1146,"line_end":1146,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":118787,"byte_end":118793,"line_start":1195,"line_end":1195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121634,"byte_end":121642,"line_start":1275,"line_end":1275,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121667,"byte_end":121675,"line_start":1276,"line_end":1276,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121757,"byte_end":121765,"line_start":1284,"line_end":1284,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121869,"byte_end":121877,"line_start":1290,"line_end":1290,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122279,"byte_end":122287,"line_start":1308,"line_end":1308,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122400,"byte_end":122408,"line_start":1314,"line_end":1314,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122822,"byte_end":122830,"line_start":1332,"line_end":1332,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122943,"byte_end":122951,"line_start":1338,"line_end":1338,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123103,"byte_end":123106,"line_start":1344,"line_end":1344,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123221,"byte_end":123224,"line_start":1350,"line_end":1350,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123370,"byte_end":123378,"line_start":1356,"line_end":1356,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123489,"byte_end":123497,"line_start":1362,"line_end":1362,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123654,"byte_end":123660,"line_start":1368,"line_end":1368,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123771,"byte_end":123777,"line_start":1374,"line_end":1374,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123933,"byte_end":123941,"line_start":1380,"line_end":1380,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124095,"byte_end":124103,"line_start":1388,"line_end":1388,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124807,"byte_end":124812,"line_start":1420,"line_end":1420,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124927,"byte_end":124935,"line_start":1426,"line_end":1426,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130302,"byte_end":130307,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139256,"byte_end":139261,"line_start":440,"line_end":440,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139286,"byte_end":139291,"line_start":441,"line_end":441,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139310,"byte_end":139315,"line_start":443,"line_end":443,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139475,"byte_end":139480,"line_start":452,"line_end":452,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139648,"byte_end":139653,"line_start":461,"line_end":461,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139803,"byte_end":139808,"line_start":467,"line_end":467,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140270,"byte_end":140275,"line_start":491,"line_end":491,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140402,"byte_end":140407,"line_start":500,"line_end":500,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140509,"byte_end":140514,"line_start":507,"line_end":507,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140646,"byte_end":140651,"line_start":513,"line_end":513,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140741,"byte_end":140746,"line_start":519,"line_end":519,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141111,"byte_end":141116,"line_start":537,"line_end":537,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141269,"byte_end":141274,"line_start":545,"line_end":545,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141392,"byte_end":141397,"line_start":551,"line_end":551,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141544,"byte_end":141549,"line_start":557,"line_end":557,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141671,"byte_end":141676,"line_start":563,"line_end":563,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141706,"byte_end":141711,"line_start":565,"line_end":565,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141823,"byte_end":141828,"line_start":571,"line_end":571,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142225,"byte_end":142230,"line_start":589,"line_end":589,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142351,"byte_end":142356,"line_start":595,"line_end":595,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142765,"byte_end":142770,"line_start":613,"line_end":613,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142883,"byte_end":142888,"line_start":619,"line_end":619,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143044,"byte_end":143047,"line_start":625,"line_end":625,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143156,"byte_end":143159,"line_start":631,"line_end":631,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143302,"byte_end":143307,"line_start":637,"line_end":637,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143418,"byte_end":143423,"line_start":643,"line_end":643,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143584,"byte_end":143590,"line_start":649,"line_end":649,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143695,"byte_end":143701,"line_start":655,"line_end":655,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144358,"byte_end":144363,"line_start":685,"line_end":685,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144514,"byte_end":144519,"line_start":693,"line_end":693,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144696,"byte_end":144701,"line_start":703,"line_end":703,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144805,"byte_end":144810,"line_start":710,"line_end":710,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144929,"byte_end":144934,"line_start":716,"line_end":716,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145058,"byte_end":145063,"line_start":722,"line_end":722,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145860,"byte_end":145865,"line_start":752,"line_end":752,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145995,"byte_end":146001,"line_start":760,"line_end":760,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/debug.rs","byte_start":154008,"byte_end":154015,"line_start":15,"line_end":15,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/hex.rs","byte_start":155009,"byte_end":155017,"line_start":6,"line_end":6,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/hex.rs","byte_start":155196,"byte_end":155204,"line_start":15,"line_end":15,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2868,"byte_end":2871,"line_start":81,"line_end":81,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4224,"byte_end":4227,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":159}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":29577,"byte_end":29580,"line_start":922,"line_end":922,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":90},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":29882,"byte_end":29888,"line_start":943,"line_end":943,"column_start":14,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":29389},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":30456,"byte_end":30462,"line_start":972,"line_end":972,"column_start":39,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":6504},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":56874,"byte_end":56877,"line_start":959,"line_end":959,"column_start":37,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":4,"index":90},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":57460,"byte_end":57463,"line_start":983,"line_end":983,"column_start":17,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":4,"index":3822},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59753,"byte_end":59763,"line_start":1064,"line_end":1064,"column_start":21,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59998,"byte_end":60008,"line_start":1073,"line_end":1073,"column_start":33,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":60194,"byte_end":60204,"line_start":1080,"line_end":1080,"column_start":46,"column_end":56},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66315,"byte_end":66320,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68548,"byte_end":68553,"line_start":139,"line_end":139,"column_start":20,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":944},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":69448,"byte_end":69453,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":944},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":70455,"byte_end":70460,"line_start":223,"line_end":223,"column_start":29,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":944},"to":{"krate":1,"index":3900}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":70996,"byte_end":71001,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":72146,"byte_end":72151,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":953},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73005,"byte_end":73011,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74126,"byte_end":74132,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":961},"to":{"krate":5,"index":2860}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74385,"byte_end":74391,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":961},"to":{"krate":5,"index":2936}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75004,"byte_end":75008,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77732,"byte_end":77736,"line_start":135,"line_end":135,"column_start":22,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78525,"byte_end":78531,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79931,"byte_end":79937,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":975},"to":{"krate":5,"index":2914}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60932,"byte_end":60935,"line_start":21,"line_end":21,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":25},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63148,"byte_end":63149,"line_start":99,"line_end":99,"column_start":34,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":287},"to":{"krate":0,"index":281}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63226,"byte_end":63232,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":93},"to":{"krate":0,"index":288}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65301,"byte_end":65302,"line_start":176,"line_end":176,"column_start":40,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":288}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80796,"byte_end":80804,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82881,"byte_end":82889,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":981},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":83289,"byte_end":83297,"line_start":133,"line_end":133,"column_start":36,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":981},"to":{"krate":1,"index":3888}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/vec_deque.rs","byte_start":83371,"byte_end":83379,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":4,"index":2068},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87172,"byte_end":87180,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":111788,"byte_end":111796,"line_start":905,"line_end":905,"column_start":15,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1731}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":112230,"byte_end":112238,"line_start":922,"line_end":922,"column_start":14,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":112670,"byte_end":112678,"line_start":944,"line_end":944,"column_start":17,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113661,"byte_end":113669,"line_start":982,"line_end":982,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2218}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113766,"byte_end":113774,"line_start":989,"line_end":989,"column_start":16,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1709}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113899,"byte_end":113907,"line_start":998,"line_end":998,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2221}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114005,"byte_end":114013,"line_start":1004,"line_end":1004,"column_start":19,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114132,"byte_end":114140,"line_start":1011,"line_end":1011,"column_start":29,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114261,"byte_end":114269,"line_start":1017,"line_end":1017,"column_start":28,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114379,"byte_end":114387,"line_start":1023,"line_end":1023,"column_start":20,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114508,"byte_end":114516,"line_start":1029,"line_end":1029,"column_start":21,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114666,"byte_end":114674,"line_start":1035,"line_end":1035,"column_start":14,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2071}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114799,"byte_end":114807,"line_start":1041,"line_end":1041,"column_start":13,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2050}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114830,"byte_end":114838,"line_start":1044,"line_end":1044,"column_start":18,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114939,"byte_end":114947,"line_start":1051,"line_end":1051,"column_start":21,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115108,"byte_end":115116,"line_start":1057,"line_end":1057,"column_start":21,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":7215}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115272,"byte_end":115280,"line_start":1064,"line_end":1064,"column_start":23,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2294}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115371,"byte_end":115379,"line_start":1070,"line_end":1070,"column_start":26,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2297}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115477,"byte_end":115485,"line_start":1076,"line_end":1076,"column_start":21,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":7532}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115864,"byte_end":115872,"line_start":1093,"line_end":1093,"column_start":16,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115974,"byte_end":115982,"line_start":1099,"line_end":1099,"column_start":23,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":3900}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116345,"byte_end":116353,"line_start":1117,"line_end":1117,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":3909}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116792,"byte_end":116800,"line_start":1134,"line_end":1134,"column_start":29,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":3909}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116964,"byte_end":116972,"line_start":1140,"line_end":1140,"column_start":27,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":3896}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":117141,"byte_end":117149,"line_start":1146,"line_end":1146,"column_start":35,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":3896}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":118787,"byte_end":118793,"line_start":1195,"line_end":1195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121634,"byte_end":121642,"line_start":1275,"line_end":1275,"column_start":22,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1538}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121667,"byte_end":121675,"line_start":1276,"line_end":1276,"column_start":22,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1550}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121757,"byte_end":121765,"line_start":1284,"line_end":1284,"column_start":26,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121869,"byte_end":121877,"line_start":1290,"line_end":1290,"column_start":27,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122279,"byte_end":122287,"line_start":1308,"line_end":1308,"column_start":25,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122400,"byte_end":122408,"line_start":1314,"line_end":1314,"column_start":26,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122822,"byte_end":122830,"line_start":1332,"line_end":1332,"column_start":29,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122943,"byte_end":122951,"line_start":1338,"line_end":1338,"column_start":30,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123103,"byte_end":123106,"line_start":1344,"line_end":1344,"column_start":30,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":4,"index":3822},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123221,"byte_end":123224,"line_start":1350,"line_end":1350,"column_start":31,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":4,"index":3822},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123370,"byte_end":123378,"line_start":1356,"line_end":1356,"column_start":28,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123489,"byte_end":123497,"line_start":1362,"line_end":1362,"column_start":29,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123654,"byte_end":123660,"line_start":1368,"line_end":1368,"column_start":30,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":4,"index":4583},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123771,"byte_end":123777,"line_start":1374,"line_end":1374,"column_start":31,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":4,"index":4583},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123933,"byte_end":123941,"line_start":1380,"line_end":1380,"column_start":42,"column_end":50},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124095,"byte_end":124103,"line_start":1388,"line_end":1388,"column_start":43,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124807,"byte_end":124812,"line_start":1420,"line_end":1420,"column_start":30,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124927,"byte_end":124935,"line_start":1426,"line_end":1426,"column_start":27,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130302,"byte_end":130307,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139256,"byte_end":139261,"line_start":440,"line_end":440,"column_start":22,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":1538}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139286,"byte_end":139291,"line_start":441,"line_end":441,"column_start":22,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":1550}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139310,"byte_end":139315,"line_start":443,"line_end":443,"column_start":15,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":1731}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139475,"byte_end":139480,"line_start":452,"line_end":452,"column_start":16,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139648,"byte_end":139653,"line_start":461,"line_end":461,"column_start":21,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139803,"byte_end":139808,"line_start":467,"line_end":467,"column_start":14,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":588},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140270,"byte_end":140275,"line_start":491,"line_end":491,"column_start":16,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":1709}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140402,"byte_end":140407,"line_start":500,"line_end":500,"column_start":22,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2218}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140509,"byte_end":140514,"line_start":507,"line_end":507,"column_start":21,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":7215}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140646,"byte_end":140651,"line_start":513,"line_end":513,"column_start":23,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2294}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140741,"byte_end":140746,"line_start":519,"line_end":519,"column_start":23,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":3900}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141111,"byte_end":141116,"line_start":537,"line_end":537,"column_start":27,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":3896}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141269,"byte_end":141274,"line_start":545,"line_end":545,"column_start":20,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141392,"byte_end":141397,"line_start":551,"line_end":551,"column_start":21,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141544,"byte_end":141549,"line_start":557,"line_end":557,"column_start":14,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2071}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141671,"byte_end":141676,"line_start":563,"line_end":563,"column_start":13,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2050}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141706,"byte_end":141711,"line_start":565,"line_end":565,"column_start":26,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141823,"byte_end":141828,"line_start":571,"line_end":571,"column_start":27,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142225,"byte_end":142230,"line_start":589,"line_end":589,"column_start":25,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142351,"byte_end":142356,"line_start":595,"line_end":595,"column_start":26,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142765,"byte_end":142770,"line_start":613,"line_end":613,"column_start":29,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142883,"byte_end":142888,"line_start":619,"line_end":619,"column_start":30,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143044,"byte_end":143047,"line_start":625,"line_end":625,"column_start":27,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":4,"index":3822},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143156,"byte_end":143159,"line_start":631,"line_end":631,"column_start":28,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":4,"index":3822},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143302,"byte_end":143307,"line_start":637,"line_end":637,"column_start":28,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143418,"byte_end":143423,"line_start":643,"line_end":643,"column_start":29,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143584,"byte_end":143590,"line_start":649,"line_end":649,"column_start":27,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":4,"index":4583},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143695,"byte_end":143701,"line_start":655,"line_end":655,"column_start":28,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":4,"index":4583},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144358,"byte_end":144363,"line_start":685,"line_end":685,"column_start":42,"column_end":47},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144514,"byte_end":144519,"line_start":693,"line_end":693,"column_start":43,"column_end":48},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144696,"byte_end":144701,"line_start":703,"line_end":703,"column_start":18,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144805,"byte_end":144810,"line_start":710,"line_end":710,"column_start":30,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144929,"byte_end":144934,"line_start":716,"line_end":716,"column_start":29,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145058,"byte_end":145063,"line_start":722,"line_end":722,"column_start":24,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145860,"byte_end":145865,"line_start":752,"line_end":752,"column_start":23,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145995,"byte_end":146001,"line_start":760,"line_end":760,"column_start":21,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":593},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/debug.rs","byte_start":154008,"byte_end":154015,"line_start":15,"line_end":15,"column_start":21,"column_end":28},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":735},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/hex.rs","byte_start":155009,"byte_end":155017,"line_start":6,"line_end":6,"column_start":23,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":750},"to":{"krate":1,"index":7584}},{"span":{"file_name":"/home/duys/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/hex.rs","byte_start":155196,"byte_end":155204,"line_start":15,"line_end":15,"column_start":23,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":750},"to":{"krate":1,"index":7586}}]}